name: Deploy to AKS

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # ðŸ”¹ Authenticate with Azure using OIDC
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          auth-type: IDENTITY  # Ensure OIDC authentication is used

      # ðŸ”¹ Log in to Azure Container Registry (ACR)
      - name: Log in to ACR
        run: az acr login --name mycontainerregistry

      # ðŸ”¹ Build and Push Docker Image to ACR
      - name: Build and Push Docker Image
        run: |
          docker build -t mycontainerregistry.azurecr.io/flask-app:${{ github.sha }} .
          docker push mycontainerregistry.azurecr.io/flask-app:${{ github.sha }}

      # ðŸ”¹ Get AKS Credentials
      - name: Get AKS Credentials
        run: az aks get-credentials --resource-group MyResourceGroup --name MyAKSCluster

      # ðŸ”¹ Deploy to AKS
      - name: Deploy to AKS
        run: |
          kubectl set image deployment/flask-app flask-app=mycontainerregistry.azurecr.io/flask-app:${{ github.sha }}
          kubectl rollout status deployment/flask-app
